package 每日一题.灯泡开关319;

/**
 * 这是一道经典的数论题。
 *
 * 整理一下题意：第 i 轮改变所有编号为 i 的倍数的灯泡的状态（其中灯泡编号从 1 开始）。
 *
 * 一个编号为 x 的灯泡经过 n 轮后处于打开状态的充要条件为「该灯泡被切换状态次数为奇数次」。
 *
 * 同时，一个灯泡切换状态的次数为其约数的个数（去重）。
 *
 * 于是问题转换为：在 [1,n] 内有多少个数，其约数的个数为奇数。这些约数个数为奇数的灯泡就是最后亮着的灯泡。
 *
 * 又根据「约数」的定义，我们知道如果某个数 k 为 x 的约数，那么 \frac{x}{k}亦为 xx 的约数，
 * 即「约数」总是成对出现，那么某个数的约数个数为奇数，意味着某个约数在分解过程中出现了 2 次，且必然重复出现在同一次拆解中，即 k = \frac{x}{k}
 *  ，即有 x 为完全平方数（反之亦然）。
 *
 *
 *  太巧妙了 很难推理到
 *  最终转化为1-n有多少个完全平方数
 */
public class Solution1 {
    public int bulbSwitch(int n) {
        return (int)Math.sqrt(n);
    }
}
